/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DAO;

import Conexion.Conexion;
import java.sql.SQLException;
import java.sql.Statement;

/**
 *
 * @author Sebastian
 */
public class EstructuraDAO {
    
    private Conexion conexion;
    public static final String crearTablaAlimentos = "create table NL_ALIMENTOS\n" +
"		(\n" +
"		   ID_ALIMENTO          int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY  1) NOT NULL,\n" +
"		   NOMBRE               varchar(50) not null,\n" +
"		   PORCION              double not null,\n" +
"		   MEDIDA		varchar(25) not null,\n" +            
"		   CALORIAS             double not null,\n" +
"		   ID_TIPOALIMENTO      int not null,\n" +
"		   PRIMARY KEY (ID_ALIMENTO)\n" +
"		   \n" +
"		);";
     public static final String crearTablaCliente = "create table NL_CLIENTE\n" +
"		(\n" +
"		   ID_CLIENTE           int not null,\n" +
"		   NOMBRE               varchar(50) not null,\n" +
"		   APELLIDO_PATERNO     varchar(50) not null,\n" +
"		   APELLIDO_MATERNO     varchar(50),\n" +
"		   NOMBRE_COMPLETO		varchar(70) not null,\n" +
"		   FECHA_NACIMIENTO     varchar(10) not null,\n" +
"		   DIRECCION            varchar(70) not null,\n" +
"		   SEXO                 varchar(1) not null,\n" +
"		   TELEFONO             varchar(20),\n" +
"		   CORREO               varchar(35) not null,\n" +
"		   ID_ESTADO            int not null,\n" +
"		   ID_SOCIO             int not null,\n" +
"		   primary key (ID_CLIENTE)\n" +
"		);";
     public static final String crearTablaComplemento = "create table NL_COMPLEMENTO\n" +
"		(\n" +
"		   ID_COMPLEMENTO       int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY  1) NOT NULL,\n" +
"		   NOMBRE               varchar(100) not null,\n" +
"		   DESCRIPCION          varchar(300) not null,\n" +
"		   PRIMARY KEY (ID_COMPLEMENTO)\n" +
"		);";
     
    public static final String crearTablaDieta = "create table NL_DIETA\n" +
"		(\n" +
"		   ID_DIETA             int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY  1) NOT NULL,\n" +
"		   ARCHIVO_PDF          varchar(50) not null,\n" +
"		   FECHA_CREACION       varchar(10) not null,\n" +
"		   ID_CLIENTE           int not null,\n" +
"		   PRIMARY KEY (ID_DIETA)\n" +
"		);";
    public static final String crearTablaEstado = "create table NL_ESTADO\n" +
"		(\n" +
"		   ID_ESTADO            int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY  1) NOT NULL,\n" +
"		   NOMBRE               varchar(50) not null,\n" +
"		   ID_PAIS              int not null,\n" +
"		   PRIMARY KEY (ID_ESTADO)\n" +
"		   \n" +
"		);";
    
    public static final String crearTablaMacronutrientes = "create table NL_MACRONUTRIENTES\n" +
"		(\n" +
"		   ID_MACRONUTRIENTES   int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY  1) NOT NULL,\n" +
"		   NOMBRE               varchar(50) not null,\n" +
"		   PRIMARY KEY (ID_MACRONUTRIENTES)\n" +
"		  \n" +
"		);";
    
    public static final String crearTablaMedidas = "create table NL_MEDIDAS\n" +
"		(\n" +
"		   ID_MEDIDA            int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY  1) NOT NULL,\n" +
"		   CINTURA              double,\n" +
"		   MUNECA               double,\n" +
"		   PECHO                double,\n" +
"		   CADERA               double,\n" +
"		   FECHA                varchar(10) not null,\n" +
"		   CUELLO				double,\n" +
"		   PESO                 double not null,\n" +
"		   ALTURA               double not null,\n" +
"		   ID_CLIENTE           int not null,\n" +
"		   primary key (ID_MEDIDA)\n" +
"		);";
    
    public static final String crearTablaPais = "create table NL_PAIS\n" +
"		(\n" +
"		   ID_PAIS              int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY  1) NOT NULL,\n" +
"		   NOMBRE               varchar(50) not null,\n" +
"		   PRIMARY KEY (ID_PAIS)\n" +
"		   \n" +
"		);";
    
    public static final String crearTablaPaquete = "create table NL_PAQUETE\n" +
"		(\n" +
"		   ID_PAQUETE           int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY  1) NOT NULL,\n" +
"		   NOMBRE               varchar(100) not null,\n" +
"		   DESCRIPCION          varchar(300) not null,\n" +
"		   PRIMARY KEY (ID_PAQUETE)\n" +
"		   \n" +
"		);";
    
    public static final String crearTablaPaqueteComplemento = "create table NL_PAQUETECOMPLEMENTO\n" +
"		(\n" +
"		   ID_PAQUETECOMPLEMENTO int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY  1) NOT NULL,\n" +
"		   ID_PAQUETE           int not null,\n" +
"		   ID_COMPLEMENTO       int not null,\n" +
"		   PRIMARY KEY (ID_PAQUETECOMPLEMENTO)\n" +
"		   \n" +
"		);";
    
    public static final String crearTablaSocio = "create table NL_SOCIO\n" +
"		(\n" +
"		   ID_SOCIO             int not null,\n" +
"		   NOMBRE               varchar(50),\n" +
"		   APELLIDO_PATERNO     varchar(50),\n" +
"		   APELLIDO_MATERNO     varchar(50),\n" +
"		   NOMBRE_COMPLETO	varchar(70),\n" +
"		   SEXO                 varchar(1),\n" +
"		   FECHA_NACIMIENTO     varchar(10),\n" +
"		   TELEFONO             varchar(20),\n" +
"		   DIRECCION            varchar(70),\n" +
"		   CORREO               varchar(35),\n" +
"		   PASSWORD             varchar(16),\n" +
"		   ESTADO 				boolean,\n" +
"		   ID_ESTADO            int,\n" +
"		   primary key (ID_SOCIO)\n" +
"		);";
    
    public static final String crearTablaTipoAlimento = "create table NL_TIPOALIMENTO\n" +
"		(\n" +
"		   ID_TIPOALIMENTO      int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY  1) NOT NULL,\n" +
"		   NOMBRE               varchar(20) not null,\n" +
"		   ID_MACRONUTRIENTES   int not null,\n" +
"		   PRIMARY KEY (ID_TIPOALIMENTO)\n" +
"		   \n" +
"		);"; 
    
    public static final String crearRelaciones = "ALTER TABLE NL_ALIMENTOS\n" +
"		ADD FOREIGN KEY(ID_TIPOALIMENTO) REFERENCES NL_TIPOALIMENTO(ID_TIPOALIMENTO);\n" +
"\n" +
"		ALTER TABLE NL_CLIENTE\n" +
"		ADD FOREIGN KEY(ID_ESTADO) REFERENCES NL_ESTADO(ID_ESTADO);\n" +
"\n" +
"		ALTER TABLE NL_CLIENTE\n" +
"		ADD FOREIGN KEY(ID_SOCIO) REFERENCES NL_SOCIO(ID_SOCIO);\n" +
"\n" +
"		ALTER TABLE NL_DIETA\n" +
"		ADD FOREIGN KEY(ID_CLIENTE) REFERENCES NL_CLIENTE(ID_CLIENTE);\n" +
"\n" +
"		ALTER TABLE NL_ESTADO\n" +
"		ADD FOREIGN KEY(ID_PAIS) REFERENCES NL_PAIS(ID_PAIS);\n" +
"\n" +
"		ALTER TABLE NL_MEDIDAS\n" +
"		ADD FOREIGN KEY(ID_CLIENTE) REFERENCES NL_CLIENTE(ID_CLIENTE);\n" +
"\n" +
"		ALTER TABLE NL_PAQUETECOMPLEMENTO\n" +
"		ADD FOREIGN KEY(ID_PAQUETE) REFERENCES NL_PAQUETE(ID_PAQUETE);\n" +
"\n" +
"		ALTER TABLE NL_PAQUETECOMPLEMENTO\n" +
"		ADD FOREIGN KEY(ID_COMPLEMENTO) REFERENCES NL_COMPLEMENTO(ID_COMPLEMENTO);\n" +
"\n" +
"		ALTER TABLE NL_SOCIO\n" +
"		ADD FOREIGN KEY(ID_ESTADO) REFERENCES NL_ESTADO(ID_ESTADO);\n" +
"\n" +
"		ALTER TABLE NL_TIPOALIMENTO\n" +
"		ADD FOREIGN KEY(ID_MACRONUTRIENTES) REFERENCES NL_MACRONUTRIENTES(ID_MACRONUTRIENTES);";
    
    public EstructuraDAO(Conexion conexion) {
        this.conexion = conexion;
    }
    
    public void crearTablas() throws SQLException{
        Statement st = conexion.createStatement();
        st.execute(crearTablaAlimentos);
        st.execute(crearTablaCliente);
        st.execute(crearTablaComplemento);
        st.execute(crearTablaDieta);
        st.execute(crearTablaEstado);
        st.execute(crearTablaMacronutrientes);
        st.execute(crearTablaPaquete);
        st.execute(crearTablaMedidas);
        st.execute(crearTablaPais);
        st.execute(crearTablaPaqueteComplemento);
        st.execute(crearTablaSocio);
        st.execute(crearTablaTipoAlimento);
        st.close();
    }
    
    public void crearRelaciones() throws SQLException{
        Statement st = conexion.createStatement();
        st.execute(crearRelaciones);
        st.close();
    }
    
}
